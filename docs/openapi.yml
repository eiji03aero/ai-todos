openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: APIs for AI todos application

paths:
  /api/auth/check-email:
    get:
      summary: Check email uniqueness
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Email uniqueness check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  isUnique:
                    type: boolean

  /api/auth/signup:
    post:
      summary: User signup
      description: Create a new user account with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - password_confirmation
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address (must be unique)
                password:
                  type: string
                  format: password
                  minLength: 8
                  description: >
                    Password requirements:
                    - Minimum 8 characters
                    - Must contain at least one uppercase letter
                    - Must contain at least one lowercase letter
                    - Must contain at least one number
                    - Must contain at least one special character
                password_confirmation:
                  type: string
                  format: password
                  description: Must exactly match the password field
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique user identifier
                  email:
                    type: string
                    format: email
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp of user account creation
                  sessionId:
                    type: string
                    description: Session token for authentication

  /api/auth/validate-session:
    post:
      summary: Validate user session
      description: Validates the current user session and returns whether it is valid or expired.
      responses:
        '200':
          description: Session validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Indicates if the session is valid
                required:
                  - valid

  /api/auth/login:
    post:
      summary: User login
      description: Authenticate a user and create a session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                remember_me:
                  type: boolean
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                  sessionId:
                    type: string
                    description: Session token for authentication
                  session:
                    type: object
                    properties:
                      expires_at:
                        type: string
                        format: date-time
                      is_remembered:
                        type: boolean

  /api/auth/app_state:
    get:
      summary: Get current application state for authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current app state data
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  email:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string

    ValidationErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Validation Failed"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "email"
              message:
                type: string
                example: "Email is already registered"