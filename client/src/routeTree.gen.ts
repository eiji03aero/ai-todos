/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as TestCenteredLayoutImport } from './app/routes/test-centered-layout'
import { Route as SignupImport } from './app/routes/signup'
import { Route as HogeImport } from './app/routes/hoge'
import { Route as HelloworldImport } from './app/routes/helloworld'
import { Route as IndexImport } from './app/routes/index'

// Create/Update Routes

const TestCenteredLayoutRoute = TestCenteredLayoutImport.update({
  id: '/test-centered-layout',
  path: '/test-centered-layout',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const HogeRoute = HogeImport.update({
  id: '/hoge',
  path: '/hoge',
  getParentRoute: () => rootRoute,
} as any)

const HelloworldRoute = HelloworldImport.update({
  id: '/helloworld',
  path: '/helloworld',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/helloworld': {
      id: '/helloworld'
      path: '/helloworld'
      fullPath: '/helloworld'
      preLoaderRoute: typeof HelloworldImport
      parentRoute: typeof rootRoute
    }
    '/hoge': {
      id: '/hoge'
      path: '/hoge'
      fullPath: '/hoge'
      preLoaderRoute: typeof HogeImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/test-centered-layout': {
      id: '/test-centered-layout'
      path: '/test-centered-layout'
      fullPath: '/test-centered-layout'
      preLoaderRoute: typeof TestCenteredLayoutImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/helloworld': typeof HelloworldRoute
  '/hoge': typeof HogeRoute
  '/signup': typeof SignupRoute
  '/test-centered-layout': typeof TestCenteredLayoutRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/helloworld': typeof HelloworldRoute
  '/hoge': typeof HogeRoute
  '/signup': typeof SignupRoute
  '/test-centered-layout': typeof TestCenteredLayoutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/helloworld': typeof HelloworldRoute
  '/hoge': typeof HogeRoute
  '/signup': typeof SignupRoute
  '/test-centered-layout': typeof TestCenteredLayoutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/helloworld' | '/hoge' | '/signup' | '/test-centered-layout'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/helloworld' | '/hoge' | '/signup' | '/test-centered-layout'
  id:
    | '__root__'
    | '/'
    | '/helloworld'
    | '/hoge'
    | '/signup'
    | '/test-centered-layout'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HelloworldRoute: typeof HelloworldRoute
  HogeRoute: typeof HogeRoute
  SignupRoute: typeof SignupRoute
  TestCenteredLayoutRoute: typeof TestCenteredLayoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HelloworldRoute: HelloworldRoute,
  HogeRoute: HogeRoute,
  SignupRoute: SignupRoute,
  TestCenteredLayoutRoute: TestCenteredLayoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/helloworld",
        "/hoge",
        "/signup",
        "/test-centered-layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/helloworld": {
      "filePath": "helloworld.tsx"
    },
    "/hoge": {
      "filePath": "hoge.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/test-centered-layout": {
      "filePath": "test-centered-layout.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
