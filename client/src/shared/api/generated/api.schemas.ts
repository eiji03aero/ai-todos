/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * API
 * APIs for AI todos application
 * OpenAPI spec version: 1.0.0
 */
export interface ErrorResponse {
  error?: string;
  message?: string;
}

export type ValidationErrorResponseDetailsItem = {
  field?: string;
  message?: string;
};

export interface ValidationErrorResponse {
  error?: string;
  details?: ValidationErrorResponseDetailsItem[];
}

export type GetApiAuthCheckEmailParams = {
email: string;
};

export type GetApiAuthCheckEmail200 = {
  isUnique?: boolean;
};

export type PostApiAuthSignupBody = {
  /** User's email address (must be unique) */
  email: string;
  /**
   * Password requirements: - Minimum 8 characters - Must contain at least one uppercase letter - Must contain at least one lowercase letter - Must contain at least one number - Must contain at least one special character

   * @minLength 8
   */
  password: string;
  /** Must exactly match the password field */
  password_confirmation: string;
};

export type PostApiAuthSignup201 = {
  /** Unique user identifier */
  id?: string;
  email?: string;
  /** Timestamp of user account creation */
  createdAt?: string;
  /** Session token for authentication */
  sessionId?: string;
};

export type PostApiAuthValidateSession200 = {
  /** Indicates if the session is valid */
  valid: boolean;
};

export type PostApiAuthLoginBody = {
  email: string;
  password: string;
  remember_me?: boolean;
};

export type PostApiAuthLogin200User = {
  id?: string;
  email?: string;
};

export type PostApiAuthLogin200Session = {
  expires_at?: string;
  is_remembered?: boolean;
};

export type PostApiAuthLogin200 = {
  user?: PostApiAuthLogin200User;
  /** Session token for authentication */
  sessionId?: string;
  session?: PostApiAuthLogin200Session;
};

export type GetApiAuthAppState200 = {
  userId?: string;
  email?: string;
};

